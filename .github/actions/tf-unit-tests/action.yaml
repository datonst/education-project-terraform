name: 'Terraform Unit Tests'
description: 'Terraform Unit Tests'
inputs:
  working-directory:
    required: true 
    description: working-directory
    default: dev

runs:
  using: "composite"
  steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init -backend=false
      shell: bash
      working-directory: ./${{ inputs.working-directory }}

    # Validate terraform files
    - name: Terraform Validate
      run: terraform validate
      shell: bash
      working-directory: ./${{ inputs.working-directory }}

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check -recursive
      shell: bash
      working-directory: ./${{ inputs.working-directory }}
    
    # Perform a security scan of the terraform code using checkov
    - name: Run Checkov action
      id: checkov
      uses: bridgecrewio/checkov-action@master
      with: 
        directory: ./${{ inputs.working-directory }}
        framework: terraform
        skip_check: CKV_TF_1

    # Upload results to GitHub Advanced Security
    # - name: Upload SARIF file
    #   if: success() || failure()
    #   uses: github/codeql-action/upload-sarif@v2
    #   with:
    #     sarif_file: results.sarif
    #     category: checkov